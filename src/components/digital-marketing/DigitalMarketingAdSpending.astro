---
import Image from "astro/components/Image.astro";
import BGArt from "../../assets/digital-marketing/bg-art.png";
import Image1 from "../../assets/digital-marketing/1.png";
import Image2 from "../../assets/digital-marketing/2.png";
import Image3 from "../../assets/digital-marketing/3.png";
import Image4 from "../../assets/digital-marketing/4.png";
import Image5 from "../../assets/digital-marketing/5.png";
---

<section
  class="ad-spending-section internal-padding just relative z-10 flex flex-row py-32 text-[#FFFFFF]"
  id="ad-spending-section"
>
  <Image
    src={BGArt}
    alt="Background Art"
    class="absolute top-0 left-0 h-full w-full object-cover"
  />

  <div class="flex w-1/2 flex-col justify-center gap-4 2xl:gap-6">
    <h3 class="text-center text-lg font-medium lg:text-xl 2xl:text-[26px]">
      We Have Managed Over
    </h3>
    <h2
      class="text-center text-[78px] font-semibold lg:text-[90px] xl:text-[106px] 2xl:text-[116px] 2xl:leading-[4.5rem]"
    >
      $1.3Â million
    </h2>
    <h3 class="text-center text-lg font-medium lg:text-xl 2xl:text-[26px]">
      In Ad Spend Across All Platforms
    </h3>
    <div class="z-10 flex items-center justify-center gap-x-10">
      <Image src={Image1} alt="Google Ads" class="aspect-square w-20" />
      <Image src={Image2} alt="Facebook Ads" class="aspect-square w-20" />
      <Image src={Image3} alt="Instagram Ads" class="aspect-square w-20" />
      <Image src={Image4} alt="LinkedIn Ads" class="aspect-square w-20" />
      <Image src={Image5} alt="YouTube Ads" class="aspect-square w-20" />
    </div>
  </div>
</section>

<style>
  .floaty {
    animation: floatUpDown 3.5s ease-in-out infinite alternate;
    will-change: transform;
    transform-origin: center center;
    transition:
      transform 320ms cubic-bezier(0.22, 1, 0.36, 1),
      filter 320ms;
    backface-visibility: hidden;
    display: block;
  }

  @keyframes floatUpDown {
    0% {
      transform: translateY(0px) scale(1);
      filter: drop-shadow(0 4px 24px rgba(77, 0, 163, 0.1));
    }
    60% {
      transform: translateY(-18px) scale(1.03);
      filter: drop-shadow(0 12px 32px rgba(77, 0, 163, 0.14));
    }
    100% {
      transform: translateY(0px) scale(1);
      filter: drop-shadow(0 4px 24px rgba(77, 0, 163, 0.1));
    }
  }

  .ideas-stat img:hover {
    transform: scale(1.12) rotate(4deg);
    transition: transform 0.25s cubic-bezier(0.4, 1.3, 0.7, 1.01);
    cursor: pointer;
  }
  .ad-spending-section {
    box-shadow: 0 0 64px 0 rgba(75, 0, 163, 0.18);
    /* border-radius: 2rem; */
    overflow: hidden;
  }

  /* small perf hints for transforms */
  .ideas-stat,
  .floaty,
  .ideas-stat img {
    will-change: transform, opacity;
  }
</style>

<script>
  import { gsap, ScrollTrigger } from "../../utils/gsapUtils.js";

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener("DOMContentLoaded", () => {
    // --- entrance for text block ---
    gsap.from("#ad-spending-section h2", {
      y: 28,
      opacity: 0,
      duration: 0.8,
      ease: "power2.out",
      scrollTrigger: {
        trigger: "#ad-spending-section h2",
        start: "top 92%",
      },
    });

    gsap.from("#ad-spending-section h3", {
      y: 18,
      opacity: 0,
      duration: 0.7,
      delay: 0.08,
      ease: "power2.out",
      scrollTrigger: {
        trigger: "#ad-spending-section h3",
        start: "top 92%",
      },
    });

    gsap.from("#ad-spending-section p", {
      y: 14,
      opacity: 0,
      duration: 0.8,
      delay: 0.14,
      ease: "power2.out",
      scrollTrigger: {
        trigger: "#ad-spending-section p",
        start: "top 92%",
      },
    });

    // --- stats items: staggered reveal + subtle scale on enter ---
    gsap.set(".ideas-stat", { opacity: 0, y: 36, scale: 0.99 });
    ScrollTrigger.batch(".ideas-stat", {
      onEnter: (batch) =>
        gsap.to(batch, {
          opacity: 1,
          y: 0,
          scale: 1,
          stagger: 0.12,
          duration: 0.65,
          ease: "power2.out",
        }),
      once: true,
      start: "top 84%",
    });

    // --- numeric counters for each stat h3 ---
    document.querySelectorAll(".ideas-stat h3").forEach((el) => {
      const raw = el.textContent || "";
      // extract digits (handles commas) and optional plus
      const digitsMatch = raw.replace(/,/g, "").match(/\d+/);
      if (!digitsMatch) return;
      const final = parseInt(digitsMatch[0], 10) || 0;
      // keep formatting (commas/plus) for suffix/prefix
      const suffix = raw.replace(/\d|,|\s/g, "");

      const obj = { val: 0 };
      gsap.to(obj, {
        val: final,
        duration: Math.min(1.2, 0.6 + final / 5000),
        ease: "power1.out",
        scrollTrigger: {
          trigger: el.closest(".ideas-stat"),
          start: "top 92%",
          toggleActions: "play none none none",
        },
        onUpdate() {
          // format with commas
          el.textContent =
            Math.round(obj.val)
              .toString()
              .replace(/\B(?=(\d{3})+(?!\d))/g, ",") + (suffix || "");
        },
      });
    });

    // --- floaty-art gentle parallax + interactive tilt ---
    const floaty = document.querySelector("#floaty-art");
    if (floaty) {
      // vertical parallax tied to scroll
      gsap.to(floaty, {
        y: 36,
        ease: "none",
        scrollTrigger: {
          trigger: ".ad-spending-section",
          start: "top bottom",
          end: "bottom top",
          scrub: 0.55,
        },
      });

      // micro-tilt on pointer move with damping
      floaty.style.willChange = "transform";
      let pointerTween = null;
      floaty.addEventListener("pointermove", (e) => {
        const rect = floaty.getBoundingClientRect();
        const rx = (e.clientX - rect.left) / rect.width - 0.5;
        const ry = (e.clientY - rect.top) / rect.height - 0.5;
        const tx = rx * 10; // translate x
        const ty = ry * 8; // translate y
        const rz = rx * 4; // rotate z
        if (pointerTween) pointerTween.kill();
        pointerTween = gsap.to(floaty, {
          x: tx,
          y: ty - 6,
          rotation: rz,
          duration: 0.45,
          ease: "power2.out",
        });
      });
      floaty.addEventListener("pointerleave", () => {
        if (pointerTween) pointerTween.kill();
        gsap.to(floaty, {
          x: 0,
          y: 0,
          rotation: 0,
          duration: 0.6,
          ease: "power2.out",
        });
      });
    }

    // --- hover micro-interactions for stats (desktop) ---
    document.querySelectorAll(".ideas-stat").forEach((stat) => {
      stat.addEventListener("mouseenter", () => {
        gsap.to(stat, {
          scale: 1.02,
          y: -4,
          duration: 0.18,
          ease: "power1.out",
        });
        const img = stat.querySelector("img");
        if (img)
          gsap.to(img, {
            scale: 1.08,
            rotation: 6,
            duration: 0.25,
            ease: "power1.out",
          });
      });
      stat.addEventListener("mouseleave", () => {
        gsap.to(stat, { scale: 1, y: 0, duration: 0.22, ease: "power2.out" });
        const img = stat.querySelector("img");
        if (img)
          gsap.to(img, {
            scale: 1,
            rotation: 0,
            duration: 0.3,
            ease: "power2.out",
          });
      });

      // keyboard / focus accessibility
      stat.addEventListener("focusin", () =>
        gsap.to(stat, { scale: 1.02, y: -4, duration: 0.16 }),
      );
      stat.addEventListener("focusout", () =>
        gsap.to(stat, { scale: 1, y: 0, duration: 0.16 }),
      );
    });
  });
</script>
