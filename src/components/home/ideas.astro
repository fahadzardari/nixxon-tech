---
import Image from "astro/components/Image.astro";
import Art from "../../assets/home/ideas/object.png";
import BGArt from "../../assets/home/ideas/art.png";
import Coffee from "../../assets/home/ideas/coffee.png";
import Person from "../../assets/home/ideas/person.png";
import World from "../../assets/home/ideas/world.png";
import Bulb from "../../assets/home/ideas/bulb.png";
---

<section
  class="ideas-section internal-padding relative z-10 flex flex-row bg-[#4B00A3] py-12 text-[#FFFFFF]"
  id="ideas-section"
>
  <Image
    src={BGArt}
    alt="Background Art"
    class="absolute top-0 left-0 h-full w-full object-cover opacity-10"
  />
  <div class="flex-1 md:block">
    <div class="tilt-container z-10 p-4">
      <div class="tilt-wrapper">
        <Image
          src={Art}
          alt="Main Art"
          id="floaty-art"
          class="floaty h-auto w-full cursor-pointer"
        />
      </div>
    </div>
  </div>
  <div class="flex flex-1 flex-col justify-center gap-4 2xl:gap-6">
    <h2
      class="text-3xl font-semibold lg:text-4xl lg:text-[2.5rem] xl:text-[3.5rem] 2xl:text-6xl 2xl:leading-[4.5rem]"
    >
      Where Ideas Take Flight, and Results Land Big
    </h2>
    <h3 class="text-lg font-medium lg:text-xl 2xl:text-[26px]">
      The Nixxon Australia Impact
    </h3>
    <p class="lg:text-sm 2xl:text-base">
      From local startups to global ventures, we’ve turned bold visions into
      measurable success. Every project we deliver blends innovation, trust, and
      precision — creating results that speak louder than words.
    </p>

    <!-- stats grid -->
    <div
      class="mt-8 grid grid-cols-1 justify-between gap-x-4 gap-y-8 sm:grid-cols-2"
    >
      <div
        class="ideas-stat flex w-full items-center gap-4 border-r border-r-white py-1 pr-4"
      >
        <Image
          src={Coffee}
          alt="Coffee Icon"
          class={"ml-auto aspect-square w-[60px] lg:w-[72px] xl:w-[80px] 2xl:w-[92px]"}
        />
        <div class="flex flex-col items-end">
          <h3
            class="text-[28px] font-medium lg:text-[32px] xl:text-[36px] 2xl:text-[44px]"
          >
            4,200+
          </h3>
          <p class="text-right text-lg font-medium xl:text-xl 2xl:text-[22px]">
            Coffees Shared
          </p>
          <p class="text-right text-xs font-medium capitalize xl:text-sm">
            Fuel for our brightest <br /> ideas
          </p>
        </div>
      </div>

      <div
        class="ideas-stat flex w-full items-center gap-4 border-r border-r-white py-1 pr-4"
      >
        <Image
          src={Person}
          alt="Person Icon"
          class={"ml-auto aspect-square w-[60px] lg:w-[72px] xl:w-[80px] 2xl:w-[92px]"}
        />
        <div class="flex flex-col items-end">
          <h3
            class="text-[28px] font-medium lg:text-[32px] xl:text-[36px] 2xl:text-[44px]"
          >
            2.5K
          </h3>
          <p class="text-right text-lg font-medium xl:text-xl 2xl:text-[22px]">
            Projects Delivered
          </p>
          <p class="text-right text-xs font-medium capitalize xl:text-sm">
            Big and small, each <br /> one unique
          </p>
        </div>
      </div>

      <div
        class="ideas-stat flex w-full items-center gap-4 border-r border-r-white py-1 pr-4"
      >
        <Image
          src={Bulb}
          alt="Lightbulb Icon"
          class={"ml-auto aspect-square w-[60px] lg:w-[72px] xl:w-[80px] 2xl:w-[92px]"}
        />
        <div class="flex flex-col items-end">
          <h3
            class="text-[28px] font-medium lg:text-[32px] xl:text-[36px] 2xl:text-[44px]"
          >
            44
          </h3>
          <p class="text-right text-lg font-medium xl:text-xl 2xl:text-[22px]">
            Creative Minds
          </p>
          <p class="text-right text-xs font-medium capitalize xl:text-sm">
            Turning visions into <br /> visuals
          </p>
        </div>
      </div>

      <div
        class="ideas-stat flex w-full items-center gap-4 border-r border-r-white py-1 pr-4"
      >
        <Image
          src={World}
          alt="World Icon"
          class={"ml-auto aspect-square w-[60px] lg:w-[72px] xl:w-[80px] 2xl:w-[92px]"}
        />
        <div class="flex flex-col items-end">
          <h3
            class="text-[28px] font-medium lg:text-[32px] xl:text-[36px] 2xl:text-[44px]"
          >
            8
          </h3>
          <p class="text-right text-lg font-medium xl:text-xl 2xl:text-[22px]">
            Countries Reached
          </p>
          <p class="text-right text-xs font-medium capitalize xl:text-sm">
            Taking Aussie creativity <br /> worldwide
          </p>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .floaty {
    animation: floatUpDown 3.5s ease-in-out infinite alternate;
    will-change: transform;
    transform-origin: center center;
    transition:
      transform 320ms cubic-bezier(0.22, 1, 0.36, 1),
      filter 320ms;
    backface-visibility: hidden;
    display: block;
  }

  @keyframes floatUpDown {
    0% {
      transform: translateY(0px) scale(1);
      filter: drop-shadow(0 4px 24px rgba(77, 0, 163, 0.1));
    }
    60% {
      transform: translateY(-18px) scale(1.03);
      filter: drop-shadow(0 12px 32px rgba(77, 0, 163, 0.14));
    }
    100% {
      transform: translateY(0px) scale(1);
      filter: drop-shadow(0 4px 24px rgba(77, 0, 163, 0.1));
    }
  }

  .ideas-stat img:hover {
    transform: scale(1.12) rotate(4deg);
    transition: transform 0.25s cubic-bezier(0.4, 1.3, 0.7, 1.01);
    cursor: pointer;
  }
  .ideas-section {
    box-shadow: 0 0 64px 0 rgba(75, 0, 163, 0.18);
    /* border-radius: 2rem; */
    overflow: hidden;
  }

  /* small perf hints for transforms */
  .ideas-stat,
  .floaty,
  .ideas-stat img {
    will-change: transform, opacity;
  }
</style>

<script >
  import { gsap, ScrollTrigger } from "../../utils/gsapUtils.js";

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener("DOMContentLoaded", () => {
    // --- entrance for text block ---
    gsap.from("#ideas-section h2", {
      y: 28,
      opacity: 0,
      duration: 0.8,
      ease: "power2.out",
      scrollTrigger: {
        trigger: "#ideas-section h2",
        start: "top 92%",
      },
    });

    gsap.from("#ideas-section h3", {
      y: 18,
      opacity: 0,
      duration: 0.7,
      delay: 0.08,
      ease: "power2.out",
      scrollTrigger: {
        trigger: "#ideas-section h3",
        start: "top 92%",
      },
    });

    gsap.from("#ideas-section p", {
      y: 14,
      opacity: 0,
      duration: 0.8,
      delay: 0.14,
      ease: "power2.out",
      scrollTrigger: {
        trigger: "#ideas-section p",
        start: "top 92%",
      },
    });

    // --- stats items: staggered reveal + subtle scale on enter ---
    gsap.set(".ideas-stat", { opacity: 0, y: 36, scale: 0.99 });
    ScrollTrigger.batch(".ideas-stat", {
      onEnter: (batch) =>
        gsap.to(batch, {
          opacity: 1,
          y: 0,
          scale: 1,
          stagger: 0.12,
          duration: 0.65,
          ease: "power2.out",
        }),
      once: true,
      start: "top 84%",
    });

    // --- numeric counters for each stat h3 ---
    document.querySelectorAll(".ideas-stat h3").forEach((el) => {
      const raw = el.textContent || "";
      // extract digits (handles commas) and optional plus
      const digitsMatch = raw.replace(/,/g, "").match(/\d+/);
      if (!digitsMatch) return;
      const final = parseInt(digitsMatch[0], 10) || 0;
      // keep formatting (commas/plus) for suffix/prefix
      const suffix = raw.replace(/\d|,|\s/g, "");

      const obj = { val: 0 };
      gsap.to(obj, {
        val: final,
        duration: Math.min(1.2, 0.6 + final / 5000),
        ease: "power1.out",
        scrollTrigger: {
          trigger: el.closest(".ideas-stat"),
          start: "top 92%",
          toggleActions: "play none none none",
        },
        onUpdate() {
          // format with commas
          el.textContent = Math.round(obj.val).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + (suffix || "");
        },
      });
    });

    // --- floaty-art gentle parallax + interactive tilt ---
    const floaty = document.querySelector("#floaty-art");
    if (floaty) {
      // vertical parallax tied to scroll
      gsap.to(floaty, {
        y: 36,
        ease: "none",
        scrollTrigger: {
          trigger: ".ideas-section",
          start: "top bottom",
          end: "bottom top",
          scrub: 0.55,
        },
      });

      // micro-tilt on pointer move with damping
      floaty.style.willChange = "transform";
      let pointerTween = null;
      floaty.addEventListener("pointermove", (e) => {
        const rect = floaty.getBoundingClientRect();
        const rx = (e.clientX - rect.left) / rect.width - 0.5;
        const ry = (e.clientY - rect.top) / rect.height - 0.5;
        const tx = rx * 10; // translate x
        const ty = ry * 8; // translate y
        const rz = rx * 4; // rotate z
        if (pointerTween) pointerTween.kill();
        pointerTween = gsap.to(floaty, { x: tx, y: ty - 6, rotation: rz, duration: 0.45, ease: "power2.out" });
      });
      floaty.addEventListener("pointerleave", () => {
        if (pointerTween) pointerTween.kill();
        gsap.to(floaty, { x: 0, y: 0, rotation: 0, duration: 0.6, ease: "power2.out" });
      });
    }

    // --- hover micro-interactions for stats (desktop) ---
    document.querySelectorAll(".ideas-stat").forEach((stat) => {
      stat.addEventListener("mouseenter", () => {
        gsap.to(stat, { scale: 1.02, y: -4, duration: 0.18, ease: "power1.out" });
        const img = stat.querySelector("img");
        if (img) gsap.to(img, { scale: 1.08, rotation: 6, duration: 0.25, ease: "power1.out" });
      });
      stat.addEventListener("mouseleave", () => {
        gsap.to(stat, { scale: 1, y: 0, duration: 0.22, ease: "power2.out" });
        const img = stat.querySelector("img");
        if (img) gsap.to(img, { scale: 1, rotation: 0, duration: 0.3, ease: "power2.out" });
      });

      // keyboard / focus accessibility
      stat.addEventListener("focusin", () => gsap.to(stat, { scale: 1.02, y: -4, duration: 0.16 }));
      stat.addEventListener("focusout", () => gsap.to(stat, { scale: 1, y: 0, duration: 0.16 }));
    });
  });
</script>
