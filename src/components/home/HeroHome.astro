---
import handImage from "../../assets/hand.png";
import CommonButton from "../common/CommonButton.astro";
import Image from "astro/components/Image.astro";
---

<section
  class="hero-section relative min-h-screen overflow-hidden bg-[#4B00A3] pt-32 text-white lg:ml-[65px] lg:rounded-l-3xl xl:ml-[88px]"
>
  <div
    class="flex h-full flex-col pt-8 lg:mt-8 lg:flex-row lg:justify-between lg:pt-16 lg:pl-12 2xl:mt-12 2xl:pl-20 3xl:mt-20"
  >
    <!-- Left -->
    <div class="z-10 w-full px-6 lg:mt-auto lg:w-[55%] lg:px-0 2xl:w-[50%]">
      <span class="mb-4 block h-[2px] w-10 bg-white"></span>
      <h1
        class="3xl:text-[86px] 3xl:leading-[100px] mb-4 text-[32px] font-bold md:text-[42px] lg:text-[66px] lg:leading-[80px] xl:text-[80px] xl:leading-[90px] 2xl:text-[76px]"
      >
        Shaping the Future of How Your Brand is Seen.
      </h1>
      <p
        class="mb-4 text-sm font-medium tracking-[1px] lg:mb-8 lg:text-sm xl:text-lg 2xl:text-xl 2xl:leading-6"
      >
        We have your digital solution on web design, mobile app development,
        SEO, branding & digital marketing
      </p>
      <div class="flex items-center space-x-4">
        <CommonButton className="text-xs font-semibold md:text-sm lg:text-lg">
          Get a proposal
        </CommonButton>
        <a
          class="flex items-center text-xs leading-4 font-semibold md:text-sm lg:text-base xl:text-lg xl:leading-6"
        >
          <span>Portfolio</span>
          <span>â†’</span>
        </a>
      </div>
    </div>

    <!-- Right -->
    <div
      class="z-0 ml-auto w-auto lg:absolute lg:right-0 lg:bottom-12 lg:w-[55%] xl:bottom-4 xl:w-1/2 2xl:w-[45%]"
    >
      <Image
        id="hand-tilt"
        src={handImage}
        alt="Hand Image"
        class="cursor-pointer"
      />
    </div>
  </div>
</section>

<script>
  // import { gsap, ScrollTrigger } from "../../utils/gsapUtils.js";

  document.addEventListener("DOMContentLoaded", () => {
    // Hand tilt effect (keep your existing code)
    const hand = document.getElementById("hand-tilt");
    if (hand) {
      hand.style.transition = "transform 0.3s";
      hand.addEventListener("mouseenter", () => {
        hand.style.transform = "scale(1.08)";
      });
      hand.addEventListener("mousemove", (e) => {
        const rect = hand.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        const centerX = rect.width / 2;
        const centerY = rect.height / 2;
        const rotateX = ((y - centerY) / centerY) * 18;
        const rotateY = ((x - centerX) / centerX) * 18;
        hand.style.transform = `scale(1.08) rotateX(${-rotateX}deg) rotateY(${rotateY}deg)`;
      });
      hand.addEventListener("mouseleave", () => {
        hand.style.transition = "transform 0.5s";
        hand.style.transform = "scale(1) rotateX(0deg) rotateY(0deg)";
        setTimeout(() => {
          hand.style.transition = "transform 0.3s";
        }, 500);
      });
    }

    // GSAP entrance animation for hero content
    // gsap.from(".hero-section .z-10", {
    //   y: 60,
    //   opacity: 0,
    //   duration: 1,
    //   ease: "power3.out",
    //   scrollTrigger: {
    //     trigger: ".hero-section",
    //     start: "top 80%",
    //   },
    // });

    // gsap.from("#hand-tilt", {
    //   x: 80,
    //   opacity: 0,
    //   duration: 1.1,
    //   ease: "power3.out",
    //   scrollTrigger: {
    //     trigger: ".hero-section",
    //     start: "top 80%",
    //   },
    // });

    // gsap.to("#hand-tilt", {
    //   y: -40,
    //   ease: "none",
    //   scrollTrigger: {
    //     trigger: ".hero-section",
    //     start: "top top",
    //     end: "bottom top",
    //     scrub: true,
    //   },
    // });
  });
</script>

<style>
  .animated-gradient-text {
    background: linear-gradient(
      90deg,
      #fff 0%,
      #7f5cff 25%,
      #00e0ff 50%,
      #ff6bcb 75%,
      #fff 100%
    );
    background-size: 200% 100%;
    color: transparent;
    background-clip: text;
    -webkit-background-clip: text;
    animation: gradient-move 3s linear infinite;
    background-repeat: repeat;
  }
  @keyframes gradient-move {
    0% {
      background-position: 0% 50%;
    }
    100% {
      background-position: 100% 50%;
    }
  }
</style>

<!-- cubic-bezier(.22,1,.36,1), box-shadow 0.3s cubic-bezier(.22,1,.36,1) 
 
 cubic-bezier(.22,1,.36,1), box-shadow 0.5s cubic-bezier(.22,1,.36,1)
  cubic-bezier(.22,1,.36,1), box-shadow 0.3s cubic-bezier(.22,1,.36,1)
-->
