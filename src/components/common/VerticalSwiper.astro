---
import VerticalImage1 from "../../assets/web-dev/1.png";
import VerticalImage2 from "../../assets/web-dev/2.png";
import VerticalImage3 from "../../assets/web-dev/3.png";
import VerticalImage4 from "../../assets/web-dev/4.png";
import VerticalImage5 from "../../assets/web-dev/5.png";
import VerticalImage6 from "../../assets/web-dev/6.png";

const webSlides = [
  {
    id: "01",
    title: "Informative Websites",
    description:
      "With our visually appealing and highly functional websites, you will get maximum user engagements with an amazing browsing experience.",
    image: VerticalImage1,
  },
  {
    id: "02",
    title: "E-Commerce",
    description:
      "We got end-to-end E-commerce solutions for you, including secure payment gateways, user-friendly shopping experiences and inventory management.",
    image: VerticalImage2,
  },
  {
    id: "03",
    title: "Backend Web Development",
    description:
      "Get in touch with us for robust backend web development services, optimal performance, smooth integration and efficient data management.",
    image: VerticalImage3,
  },
  {
    id: "04",
    title: "Frontend Design & Development",
    description:
      "Our team of professionals excels in crafting captivating front-end designs with responsive and user-friendly interfaces.",
    image: VerticalImage4,
  },
  {
    id: "05",
    title: "Web Portals",
    description:
      "Our experts specialize in developing intuitive and feature-rich web portals providing smooth access to information and services.",
    image: VerticalImage5,
  },
  {
    id: "06",
    title: "Custom Web Apps",
    description:
      "Our custom web development applications cater to specific business needs ensuring unique functionalities and improved user engagement.",
    image: VerticalImage6,
  },
];
import Image from "astro/components/Image.astro";

const {
  title = "Website Services That set us apart",
  description = "Businesses may differentiate themselves from the competition online with a distinctive online presence thanks to our bespoke website services. Our staff has the know-how to provide custom solutions, whether it's designing a web application, constructing a content management system, or developing a unique e-commerce platform.",
  slides = webSlides,
} = Astro.props;
---

<section
  class="vertical-swiper-section relative overflow-hidden py-12 lg:py-20"
>
  <!-- Enhanced background decoration elements -->
  <div class="pointer-events-none absolute inset-0 overflow-hidden">
    <div
      class="bg-gradient-blob absolute -top-[400px] -left-[400px] h-[800px] w-[800px] rounded-full bg-purple-500/10 opacity-10 blur-3xl"
    >
    </div>
    <div
      class="bg-gradient-blob absolute top-[30%] -right-[300px] h-[600px] w-[600px] rounded-full bg-blue-500/10 opacity-10 blur-3xl"
    >
    </div>

    <!-- New decorative elements -->
    <div class="floating-circles">
      <div
        class="floating-circle absolute top-[15%] left-[45%] h-2 w-2 rounded-full bg-purple-400 opacity-40"
      >
      </div>
      <div
        class="floating-circle absolute top-[35%] left-[25%] h-3 w-3 rounded-full bg-blue-400 opacity-30"
      >
      </div>
      <div
        class="floating-circle absolute top-[65%] left-[85%] h-2 w-2 rounded-full bg-indigo-400 opacity-40"
      >
      </div>
      <div
        class="floating-circle absolute top-[75%] left-[15%] h-4 w-4 rounded-full bg-purple-300 opacity-20"
      >
      </div>
    </div>

    <div
      class="decoration-line absolute top-0 bottom-0 left-[15%] w-[1px] bg-gradient-to-b from-transparent via-purple-500/50 to-transparent opacity-20"
    >
    </div>
    <div
      class="decoration-line absolute top-0 right-[15%] bottom-0 w-[1px] bg-gradient-to-b from-transparent via-purple-500/50 to-transparent opacity-20"
    >
    </div>
    <div
      class="decoration-dots absolute top-[20%] right-[10%] flex flex-col gap-2"
    >
      <div class="h-1 w-1 rounded-full bg-purple-500/50"></div>
      <div class="h-1 w-1 rounded-full bg-purple-500/50"></div>
      <div class="h-1 w-1 rounded-full bg-purple-500/50"></div>
    </div>
  </div>

  <!-- Header content with enhanced animations -->
  <div class="relative z-10">
    <h2
      class="internal-padding section-title mb-4 text-center text-xl font-semibold text-[#000047] capitalize md:text-2xl lg:text-3xl xl:text-4xl 2xl:text-[40px]"
    >
      {title}
    </h2>
    <div
      class="section-decoration mx-auto mb-6 h-1 w-16 rounded bg-gradient-to-r from-purple-600 to-blue-500"
    >
      <div
        class="decoration-glow absolute top-1/2 left-1/2 h-4 w-12 -translate-x-1/2 -translate-y-1/2 rounded-full bg-purple-500/30 blur-md"
      >
      </div>
    </div>
    <p
      class="internal-padding section-description mx-auto l text-center text-xs text-[#2A2111] md:text-sm lg:text-base xl:text-lg"
    >
      {description}
    </p>
  </div>

  <!-- Mobile/Tablet Layout (< 1024px) -->
  <div class="mobile-swiper-container mt-12 lg:hidden">
    <div class="swiper mobileVerticalSwiper">
      <div class="swiper-wrapper">
        {
          slides.map((slide) => (
            <div class="swiper-slide">
              <div class="mobile-slide-content mx-auto flex max-w-lg flex-col items-center rounded-2xl p-6">
                <div class="mobile-card-inner relative w-full overflow-hidden rounded-2xl border border-gray-100 bg-white/90 p-6 shadow-lg backdrop-blur-lg">
                  <div class="absolute top-0 right-0 -m-10 h-32 w-32 rounded-full bg-gradient-to-br from-purple-200 to-blue-100 opacity-60 blur-md" />
                  <div class="absolute bottom-10 left-0 -m-10 h-24 w-24 rounded-full bg-gradient-to-tr from-blue-100 to-purple-100 opacity-40 blur-md" />

                  <div class="relative z-10">
                    <div class="mb-6 flex items-center justify-between">
                      <span class="mobile-slide-number text-gradient bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-6xl font-bold text-transparent">
                        {slide.id}
                      </span>
                    </div>

                    <div class="mobile-slide-image-container mb-5 w-full">
                      <div class="image-highlight absolute inset-0 bg-gradient-to-tr from-purple-500/5 to-blue-500/5" />
                      <Image
                        src={slide.image}
                        alt={`${slide.title} Image`}
                        class="mobile-slide-image h-auto max-h-[320px] w-full transform rounded-lg object-contain p-2 transition-transform"
                      />
                      <div class="absolute top-0 right-0 h-16 w-16 overflow-hidden">
                        <div class="corner-highlight absolute top-0 right-0 h-4 w-4 translate-x-2 -translate-y-1 rotate-45 transform bg-gradient-to-br from-purple-400/30 to-transparent" />
                      </div>
                    </div>

                    <h3 class="mobile-slide-title mb-4 text-left text-xl font-semibold text-[#000047] md:text-2xl">
                      {slide.title}
                    </h3>

                    <p class="mobile-slide-description mb-5 text-left text-sm text-gray-600 md:text-base">
                      {slide.description}
                    </p>
                  </div>
                </div>
              </div>
            </div>
          ))
        }
      </div>
      <div class="swiper-pagination mobile-pagination mx-auto mt-8"></div>

      <!-- Enhanced navigation buttons with pulse effect -->
      <div class="swiper-navigation mt-6 flex justify-center gap-4">
        <button
          class="mobile-swiper-prev relative flex h-10 w-10 items-center justify-center overflow-hidden rounded-full bg-white/90 text-purple-800 shadow-md backdrop-blur transition-all hover:bg-purple-50"
        >
          <span
            class="btn-pulse absolute inset-0 rounded-full bg-purple-400/20 opacity-0"
          ></span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            fill="currentColor"
            viewBox="0 0 16 16"
          >
            <path
              fill-rule="evenodd"
              d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"
            ></path>
          </svg>
        </button>
        <button
          class="mobile-swiper-next relative flex h-10 w-10 items-center justify-center overflow-hidden rounded-full bg-white/90 text-purple-800 shadow-md backdrop-blur transition-all hover:bg-purple-50"
        >
          <span
            class="btn-pulse absolute inset-0 rounded-full bg-purple-400/20 opacity-0"
          ></span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            fill="currentColor"
            viewBox="0 0 16 16"
          >
            <path
              fill-rule="evenodd"
              d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"
            ></path>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Desktop Layout (>= 1024px) with enhanced visuals -->
  <div
    class="vertical-swiper-container relative mx-4 mt-16 hidden h-[600px] lg:mx-12 lg:block lg:h-[650px] xl:mx-20 xl:h-[710px]"
  >
    <div class="swiper verticalSwiper h-full">
      <div class="swiper-wrapper">
        {
          slides.map((slide) => (
            <div class="swiper-slide">
              <div class="slide-content relative flex h-full items-center">
                <div class="slide-info relative flex w-[35%] flex-col items-start pr-8 lg:w-[30%]">
                  <span class="slide-number bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-[80px] leading-none font-bold text-transparent opacity-90 lg:text-[120px] xl:text-[140px] 2xl:text-[160px]">
                    {slide.id}
                  </span>

                  <div class="slide-text relative mt-4 lg:mt-6">
                    <h2 class="slide-title mb-4 text-xl font-semibold text-[#000047] lg:mb-6 lg:text-2xl xl:text-3xl 2xl:text-4xl">
                      {slide.title}
                    </h2>
                    <p
                      set:html={slide.description}
                      class="slide-description text-sm leading-relaxed text-gray-600 lg:text-base xl:text-lg"
                    />
                  </div>
                </div>

                <div class="slide-image-container relative flex w-[65%] items-center justify-center lg:w-[70%]">
                  {/* <div class="image-backdrop absolute h-full max-h-[80%] w-full max-w-[80%] rounded-2xl bg-gradient-to-r from-purple-50 to-blue-50 opacity-70" /> */}

                  <div class="relative flex w-full items-center justify-center">
                    {/* <div class="absolute top-[10%] right-[10%] h-40 w-40 rounded-full bg-gradient-to-r from-purple-200/40 to-blue-200/40 blur-xl" />
                    <div class="absolute bottom-[10%] left-[10%] h-24 w-24 rounded-full bg-gradient-to-r from-blue-200/40 to-purple-200/40 blur-xl" /> */}

                    <div class="relative z-10">
                      <Image
                        src={slide.image}
                        alt={`${slide.title} Image`}
                        class="slide-image h-auto max-h-[450px] w-full object-contain lg:max-h-[460px] xl:max-h-[500px] 2xl:max-h-[550px]"
                      />

                      <div class="tech-dots absolute -right-3 -bottom-3 flex gap-2">
                        <span class="dot-1 h-2 w-2 rounded-full bg-purple-500" />
                        <span class="dot-2 h-2 w-2 rounded-full bg-blue-500" />
                        <span class="dot-3 h-2 w-2 rounded-full bg-indigo-500" />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))
        }
      </div>

      <!-- Enhanced pagination with custom styling -->
      <div class="swiper-pagination vertical-pagination"></div>

      <!-- Custom navigation with enhanced visuals -->
      <div
        class="vertical-navigation absolute right-4 bottom-4 z-20 flex gap-3"
      >
        <button
          class="vertical-swiper-prev relative flex h-12 w-12 items-center justify-center overflow-hidden rounded-full bg-white text-purple-800 shadow-lg transition-all hover:bg-purple-50"
        >
          <span
            class="btn-pulse absolute inset-0 rounded-full bg-purple-400/20 opacity-0"
          ></span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            fill="currentColor"
            viewBox="0 0 16 16"
          >
            <path
              fill-rule="evenodd"
              d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z"
            ></path>
          </svg>
        </button>
        <button
          class="vertical-swiper-next relative flex h-12 w-12 items-center justify-center overflow-hidden rounded-full bg-white text-purple-800 shadow-lg transition-all hover:bg-purple-50"
        >
          <span
            class="btn-pulse absolute inset-0 rounded-full bg-purple-400/20 opacity-0"
          ></span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            fill="currentColor"
            viewBox="0 0 16 16"
          >
            <path
              fill-rule="evenodd"
              d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z"
            ></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
</section>

<script>
  import Swiper from "swiper";
  import {
    Pagination,
    Mousewheel,
    EffectFade,
    Autoplay,
    Navigation,
  } from "swiper/modules";
  import "swiper/css";
  import "swiper/css/pagination";
  import "swiper/css/effect-fade";
  import { gsap } from "../../utils/gsapUtils";

  document.addEventListener("DOMContentLoaded", function () {
    // Check for reduced motion preference
    const prefersReducedMotion = window.matchMedia(
      "(prefers-reduced-motion: reduce)",
    ).matches;

    // GSAP animations for the section title and description
    gsap.from(".section-title", {
      y: 40,
      opacity: 0,
      duration: 1,
      ease: "power3.out",
      scrollTrigger: {
        trigger: ".section-title",
        start: "top 85%",
      },
    });

    gsap.from(".section-decoration", {
      scaleX: 0,
      opacity: 0,
      duration: 0.8,
      ease: "power2.out",
      scrollTrigger: {
        trigger: ".section-title",
        start: "top 85%",
      },
    });

    gsap.from(".section-description", {
      y: 30,
      opacity: 0,
      duration: 1,
      delay: 0.2,
      ease: "power3.out",
      scrollTrigger: {
        trigger: ".section-description",
        start: "top 85%",
      },
    });

    // Enhanced subtle animations for background elements
    if (!prefersReducedMotion) {
      // Animate background blobs
      gsap.to(".bg-gradient-blob", {
        y: -20,
        x: 10,
        rotation: 5,
        duration: 8,
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut",
      });

      // Animate decoration lines
      gsap.to(".decoration-line", {
        opacity: 0.1,
        duration: 2,
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut",
        stagger: 1,
      });

      // Animate decoration dots
      gsap.to(".decoration-dots div", {
        y: -5,
        opacity: 0.5,
        duration: 1.5,
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut",
        stagger: 0.2,
      });

      // Animate floating circles with random movement
      gsap.to(".floating-circle", {
        y: "random(-15, 15)",
        x: "random(-15, 15)",
        duration: "random(3, 6)",
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut",
        stagger: 0.3,
      });

      // Subtle glow on the section decoration
      gsap.to(".decoration-glow", {
        opacity: 0.5,
        scale: 1.2,
        duration: 2,
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut",
      });
    }

    // Mobile Swiper (Horizontal with more features)
    const mobileSwiper = new Swiper(".mobileVerticalSwiper", {
      slidesPerView: 1,
      spaceBetween: 30,
      grabCursor: true,
      modules: [Pagination, Autoplay, Navigation],
      pagination: {
        el: ".mobile-pagination",
        clickable: true,
        dynamicBullets: true,
      },
      navigation: {
        nextEl: ".mobile-swiper-next",
        prevEl: ".mobile-swiper-prev",
      },
      autoplay: {
        delay: 4000,
        disableOnInteraction: false,
        pauseOnMouseEnter: true,
      },
      speed: 600,
      effect: "creative",
      creativeEffect: {
        prev: {
          translate: [0, 0, -400],
        },
        next: {
          translate: ["100%", 0, 0],
        },
      },
      on: {
        init: function () {
          animateMobileSlide(this.activeIndex);
        },
        slideChange: function () {
          animateMobileSlide(this.activeIndex);
        },
      },
    });

    // Desktop Swiper (Vertical with enhanced effects)
    const desktopSwiper = new Swiper(".verticalSwiper", {
      direction: "vertical",
      slidesPerView: 1,
      spaceBetween: 30,
      mousewheel: {
        forceToAxis: true,
        sensitivity: 1,
        releaseOnEdges: true,
      },
      modules: [Pagination, Mousewheel, EffectFade, Navigation],
      effect: "fade",
      fadeEffect: {
        crossFade: true,
      },
      speed: 800,
      pagination: {
        el: ".vertical-pagination",
        clickable: true,
        renderBullet: function (index, className) {
          return `<span class="${className} custom-bullet">${index + 1}</span>`;
        },
      },
      navigation: {
        nextEl: ".vertical-swiper-next",
        prevEl: ".vertical-swiper-prev",
      },
      on: {
        init: function () {
          animateDesktopSlide(this.activeIndex);
        },
        slideChange: function () {
          animateDesktopSlide(this.activeIndex);
        },
      },
    });

    // Enhanced animation function for mobile slides
    function animateMobileSlide(index) {
      if (prefersReducedMotion) return;

      const slides = document.querySelectorAll(
        ".mobileVerticalSwiper .swiper-slide",
      );
      const activeSlide = slides[index];

      if (!activeSlide) return;

      // Reset all slides
      gsap.set(".mobile-slide-number", { opacity: 0, y: 20 });
      gsap.set(".mobile-slide-badge", { opacity: 0, x: 20 });
      gsap.set(".mobile-slide-image", { opacity: 0, scale: 0.9, y: 10 });
      gsap.set(".mobile-slide-title", { opacity: 0, y: 15 });
      gsap.set(".mobile-slide-description", { opacity: 0, y: 10 });
      gsap.set(".mobile-slide-link", { opacity: 0, y: 10 });
      gsap.set(".img-wrapper", { boxShadow: "0 5px 15px rgba(0,0,0,0.05)" });

      // Animate active slide with staggered sequence - IMAGE FIRST for quicker visibility
      const tl = gsap.timeline();

      // Start with number and image (most important elements)
      tl.to(activeSlide.querySelector(".mobile-slide-number"), {
        opacity: 1,
        y: 0,
        duration: 0.5,
        ease: "back.out(1.5)",
      })
        .to(
          activeSlide.querySelector(".mobile-slide-image"),
          {
            opacity: 1,
            scale: 1,
            y: 0,
            duration: 0.6,
            ease: "back.out(1.2)",
          },
          "-=0.3",
        )
        .to(
          activeSlide.querySelector(".img-wrapper"),
          {
            boxShadow: "0 8px 30px rgba(0,0,0,0.15)",
            duration: 0.8,
          },
          "-=0.4",
        )
        .to(
          activeSlide.querySelector(".mobile-slide-badge"),
          {
            opacity: 1,
            x: 0,
            duration: 0.4,
            ease: "power2.out",
          },
          "-=0.7",
        )
        .to(
          activeSlide.querySelector(".mobile-slide-title"),
          {
            opacity: 1,
            y: 0,
            duration: 0.5,
            ease: "power2.out",
          },
          "-=0.4",
        )
        .to(
          activeSlide.querySelector(".mobile-slide-description"),
          {
            opacity: 1,
            y: 0,
            duration: 0.5,
            ease: "power2.out",
          },
          "-=0.3",
        )
        .to(
          activeSlide.querySelector(".mobile-slide-link"),
          {
            opacity: 1,
            y: 0,
            duration: 0.4,
            ease: "power2.out",
          },
          "-=0.2",
        );

      // Animated shine effect across the image
      gsap.fromTo(
        activeSlide.querySelector(".image-highlight"),
        {
          opacity: 0,
          x: "-100%",
          skewX: 30,
        },
        {
          opacity: 0.4,
          x: "100%",
          skewX: 30,
          duration: 1.5,
          delay: 0.3,
          ease: "power2.inOut",
        },
      );

      // Corner highlight animation
      gsap.fromTo(
        activeSlide.querySelector(".corner-highlight"),
        {
          opacity: 0,
        },
        {
          opacity: 1,
          duration: 0.8,
          delay: 0.4,
          ease: "power2.out",
          repeat: 1,
          yoyo: true,
        },
      );

      // Hover effect for current slide image
      const currentImage = activeSlide.querySelector(".mobile-slide-image");
      currentImage.addEventListener("mouseenter", () => {
        gsap.to(currentImage, {
          scale: 1.05,
          duration: 0.3,
          ease: "power2.out",
        });
      });

      currentImage.addEventListener("mouseleave", () => {
        gsap.to(currentImage, {
          scale: 1,
          duration: 0.3,
          ease: "power2.out",
        });
      });
    }

    // Enhanced animation function for desktop slides - IMAGE APPEARING EARLIER
    function animateDesktopSlide(index) {
      if (prefersReducedMotion) return;

      const slides = document.querySelectorAll(".verticalSwiper .swiper-slide");
      const activeSlide = slides[index];

      if (!activeSlide) return;

      // Reset all slides with improved reset
      gsap.set(".slide-number", { opacity: 0, scale: 0.8 });
      gsap.set(".image-backdrop", { opacity: 0, scale: 0.9 });
      gsap.set(".slide-image", { opacity: 0, y: 30, scale: 0.95 });
      gsap.set(".slide-title", { opacity: 0, y: 20 });
      gsap.set(".slide-description", { opacity: 0, y: 15 });
      gsap.set(".slide-link", { opacity: 0, y: 10 });
      gsap.set(".tech-dots span", { opacity: 0, scale: 0 });
      gsap.set(".tech-badge", { opacity: 0, y: -10 });
      gsap.set(".frame-inner", { boxShadow: "0 5px 15px rgba(0,0,0,0.05)" });

      // Animate active slide with choreographed sequence
      const tl = gsap.timeline();

      // First animate the number and backdrop together with image for quicker visibility
      tl.to(activeSlide.querySelector(".slide-number"), {
        opacity: 1,
        scale: 1,
        duration: 0.6,
        ease: "back.out(1.5)",
      })
        .to(
          activeSlide.querySelector(".image-backdrop"),
          {
            opacity: 0.7,
            scale: 1,
            duration: 0.7,
            ease: "power2.out",
          },
          "-=0.4",
        )

        // Image appears earlier in the animation sequence
        .to(
          activeSlide.querySelector(".slide-image"),
          {
            opacity: 1,
            y: 0,
            scale: 1,
            duration: 0.8,
            ease: "back.out(1.5)",
          },
          "-=0.5",
        )
        .to(
          activeSlide.querySelector(".frame-inner"),
          {
            boxShadow: "0 15px 35px rgba(0,0,0,0.12)",
            duration: 0.8,
          },
          "-=0.6",
        )

        // Then bring in the main content
        .to(
          activeSlide.querySelector(".slide-title"),
          {
            opacity: 1,
            y: 0,
            duration: 0.6,
            ease: "power2.out",
          },
          "-=0.6",
        )
        .to(
          activeSlide.querySelector(".slide-description"),
          {
            opacity: 1,
            y: 0,
            duration: 0.6,
            ease: "power2.out",
          },
          "-=0.4",
        )

        // Finally add the small details
        .to(
          activeSlide.querySelector(".slide-link"),
          {
            opacity: 1,
            y: 0,
            duration: 0.5,
            ease: "power2.out",
          },
          "-=0.3",
        )
        .to(
          activeSlide.querySelectorAll(".tech-dots span"),
          {
            opacity: 1,
            scale: 1,
            duration: 0.4,
            stagger: 0.1,
            ease: "back.out(2)",
          },
          "-=0.3",
        )
        .to(
          activeSlide.querySelector(".tech-badge"),
          {
            opacity: 1,
            y: 0,
            duration: 0.5,
            ease: "back.out(1.5)",
          },
          "-=0.4",
        );

      // Image shine effect
      gsap.fromTo(
        activeSlide.querySelector(".image-shine"),
        {
          opacity: 0,
          x: "-100%",
        },
        {
          opacity: 0.6,
          x: "100%",
          duration: 1.2,
          delay: 0.2,
          ease: "power2.inOut",
        },
      );

      // Add subtle floating animations for active elements
      gsap.to(activeSlide.querySelector(".image-frame"), {
        y: -10,
        duration: 3,
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut",
      });

      gsap.to(activeSlide.querySelector(".tech-dots"), {
        rotate: 10,
        duration: 4,
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut",
      });

      // Badge pulse effect
      gsap.to(activeSlide.querySelector(".tech-badge"), {
        scale: 1.1,
        duration: 0.8,
        repeat: 1,
        yoyo: true,
        ease: "power1.inOut",
        delay: 0.5,
      });

      // Animate each dot individually
      gsap.to(activeSlide.querySelector(".dot-1"), {
        y: -3,
        duration: 1.5,
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut",
        delay: 0.1,
      });

      gsap.to(activeSlide.querySelector(".dot-2"), {
        y: -3,
        duration: 1.7,
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut",
        delay: 0.3,
      });

      gsap.to(activeSlide.querySelector(".dot-3"), {
        y: -3,
        duration: 1.9,
        repeat: -1,
        yoyo: true,
        ease: "sine.inOut",
        delay: 0.5,
      });
    }

    // Add event listeners for custom buttons if not using reduced motion
    if (!prefersReducedMotion) {
      // Enhanced button interactions with pulse effect
      const buttons = document.querySelectorAll(
        ".mobile-swiper-prev, .mobile-swiper-next, .vertical-swiper-prev, .vertical-swiper-next",
      );

      buttons.forEach((button) => {
        const pulse = button.querySelector(".btn-pulse");

        button.addEventListener("mouseenter", () => {
          gsap.to(button, {
            scale: 1.1,
            duration: 0.2,
          });

          gsap.fromTo(
            pulse,
            {
              opacity: 0.7,
              scale: 0.5,
            },
            {
              opacity: 0,
              scale: 1.5,
              duration: 0.8,
              ease: "power2.out",
            },
          );
        });

        button.addEventListener("mouseleave", () => {
          gsap.to(button, {
            scale: 1,
            duration: 0.2,
          });
        });

        button.addEventListener("mousedown", () => {
          gsap.to(button, {
            scale: 0.95,
            duration: 0.1,
          });
        });

        button.addEventListener("mouseup", () => {
          gsap.to(button, {
            scale: 1.1,
            duration: 0.1,
          });
        });
      });

      // Add interactive hover effect for learn more links
      const links = document.querySelectorAll(".slide-link");

      links.forEach((link) => {
        const underline = link.querySelector(".link-underline");

        link.addEventListener("mouseenter", () => {
          gsap.to(underline, {
            width: "100%",
            duration: 0.3,
            ease: "power1.out",
          });
        });

        link.addEventListener("mouseleave", () => {
          gsap.to(underline, {
            width: 0,
            duration: 0.3,
            ease: "power1.in",
          });
        });
      });
    }
  });
</script>

<style>
  /* Mobile Swiper Styles */
  .mobile-swiper-container {
    position: relative;
    overflow: visible;
    padding-bottom: 70px;
  }

  .mobile-pagination {
    position: absolute;
    bottom: 40px;
    left: 0;
    right: 0;
    width: 100%;
    display: flex;
    justify-content: center;
    gap: 8px;
    z-index: 20;
  }

  .mobile-pagination :global(.swiper-pagination-bullet) {
    width: 10px;
    height: 10px;
    background: #e4e4e4;
    opacity: 1;
    transition: all 0.3s ease;
    border-radius: 50%;
  }

  .mobile-pagination :global(.swiper-pagination-bullet-active) {
    background: #9d7eff;
    width: 24px;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(157, 126, 255, 0.5);
  }

  /* Desktop Swiper Styles */
  .vertical-swiper-container {
    position: relative;
    overflow: hidden;
    border-radius: 20px;
  }

  .vertical-pagination {
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    z-index: 20;
    gap: 10px;
  }

  .vertical-pagination :global(.swiper-pagination-bullet) {
    width: 26px;
    height: 26px;
    background: white;
    opacity: 1;
    transition: all 0.3s ease;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    color: #666;
    border: 1px solid #eaeaea;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }

  .vertical-pagination :global(.swiper-pagination-bullet-active) {
    background: #9d7eff;
    color: white;
    font-weight: bold;
    border-color: #9d7eff;
    box-shadow: 0 0 15px rgba(157, 126, 255, 0.5);
  }

  .swiper-slide {
    opacity: 0;
    transition: opacity 0.4s ease;
  }

  .swiper-slide-active {
    opacity: 1;
  }

  .slide-content {
    overflow: hidden;
    padding: 0 40px;
  }

  .text-gradient {
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
  }

  /* Enhanced transitions and hover effects */
  .slide-image,
  .slide-title,
  .slide-description,
  .mobile-slide-image,
  .mobile-slide-title,
  .mobile-slide-description {
    will-change: opacity, transform;
  }

  .image-frame {
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  .image-frame:hover {
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
    transform: translateY(-5px);
  }

  .tech-badge {
    transform: rotate(0);
    transition: transform 0.3s ease;
  }

  .image-frame:hover .tech-badge {
    transform: rotate(-8deg);
  }

  /* Improved shine effect */
  .image-shine {
    will-change: transform, opacity;
    pointer-events: none;
  }

  /* Prevent animations for users who prefer reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .bg-gradient-blob,
    .decoration-line,
    .decoration-dots div,
    .image-frame,
    .tech-dots,
    .floating-circle,
    .decoration-glow,
    .btn-pulse,
    .image-shine,
    .corner-highlight,
    .image-highlight {
      animation: none !important;
      transition: none !important;
    }
  }
</style>
